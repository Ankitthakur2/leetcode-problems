Given a string s, check if it can be constructed by taking a substring of it and appending multiple copies of the substring together.

 

Example 1:

Input: s = "abab"
Output: true
Explanation: It is the substring "ab" twice.
Example 2:

Input: s = "aba"
Output: false
Example 3:

Input: s = "abcabcabcabc"
Output: true
Explanation: It is the substring "abc" four times or the substring "abcabc" twice.
 

Constraints:

1 <= s.length <= 104
s consists of lowercase English letters.

class Solution {
public:
    bool repeatedSubstringPattern(string s) {
        int n=s.length();
        string ans=s+s;
        ans.pop_back();
        ans=ans.substr(1);
        
        for(int i=0;i<=ans.length()-s.length()+1;i++)
        {
            
            if(ans.substr(i,n)==s)
                return true;
            
        }
        
        return false;
        
        
    }
};
