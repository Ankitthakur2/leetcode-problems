Given an array of integers heights representing the histogram's bar height where the width of each bar is 1, return the area of the largest rectangle in the histogram.

 

Example 1:


Input: heights = [2,1,5,6,2,3]
Output: 10
Explanation: The above is a histogram where width of each bar is 1.
The largest rectangle is shown in the red area, which has an area = 10 units.
Example 2:


Input: heights = [2,4]
Output: 4
 

Constraints:

1 <= heights.length <= 10^5
0 <= heights[i] <= 10^4


class Solution {
public:
    int largestRectangleArea(vector<int>& heights) {
        vector<int> A=heights;
        
        int n=A.size();
     if(n==1)
      return A[0];
    vector<int> v1(n,-1); //left

    vector<int> v2(n,n); // right
    stack<int> s;
    for(int i=0;i<n;i++)
    {
        while(s.size()>0 && A[s.top()]>=A[i])
               s.pop();

               if(!s.empty())
               {
                   v1[i]=s.top();

               }

        s.push(i);
    }

    while(!s.empty())
         s.pop();
     for(int i=n-1;i>=0;i--)
    {
        while(s.size()>0 && A[s.top()]>=A[i])
               s.pop();

               if(!s.empty())
               {
                   v2[i]=s.top();

               }

        s.push(i);
    }

    int area=INT_MIN;

    for(int i=0;i<n;i++)
    {
       area= max(area,((abs(v1[i]-v2[i])-1)*A[i]) );


    }


    return area;
        
        
        
    }
};
