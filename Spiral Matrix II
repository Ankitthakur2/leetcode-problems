Given a positive integer n, generate an n x n matrix filled with elements from 1 to n2 in spiral order.

 

Example 1:


Input: n = 3
Output: [[1,2,3],[8,9,4],[7,6,5]]
Example 2:

Input: n = 1
Output: [[1]]
 

Constraints:

1 <= n <= 20


class Solution {
public:
    vector<vector<int>> generateMatrix(int n) {
        
        
         vector<vector<int>> matrix(n,vector<int>(n, 0));
        
        int m=n;
        
        int size=m*n;
        
        int count=1;
        
        int rstart=0,cstart=0;
        int rend=m-1,cend=n-1;
        
        
        while(count<=size)
        {
            
            for(int i=cstart;i<=cend && count<=size;i++)
            {
                matrix[rstart][i]=count;
                count++;
            }
            
            rstart++;
            
            for(int i=rstart;i<=rend && count<=size;i++)
            {
                
                matrix[i][cend]=count;
                count++;
            }
            
            cend--;
            
            for(int i=cend;i>=cstart && count<=size;i--)
            {
                
                matrix[rend][i]=count;
                count++;
            }
            
            rend--;
            
            for(int i=rend;i>=rstart && count<=size;i--)
            {
                matrix[i][cstart]=count;
                count++;
                
            }
            
            cstart++;
            
            
            
            
            
        }
        
        
        
        
        return matrix;
        
        
        
        
    }
};
