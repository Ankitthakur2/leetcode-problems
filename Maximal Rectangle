class Solution {
public:
    
int findarea(vector<int> &A) {
    int n=A.size();
     if(n==1)
      return A[0];
    vector<int> v1(n,-1); //left
    
    vector<int> v2(n,n); // right
    stack<int> s;
    for(int i=0;i<n;i++)
    {
        while(s.size()>0 && A[s.top()]>=A[i])
               s.pop();
               
               if(!s.empty())
               {
                   v1[i]=s.top();
                   
               }
        
        s.push(i);
    }
    
    while(!s.empty())
         s.pop();
     for(int i=n-1;i>=0;i--)
    {
        while(s.size()>0 && A[s.top()]>=A[i])
               s.pop();
               
               if(!s.empty())
               {
                   v2[i]=s.top();
                   
               }
        
        s.push(i);
    }
    
    int area=INT_MIN;
    
    for(int i=0;i<n;i++)
    {
       area= max(area,((abs(v1[i]-v2[i])-1)*A[i]) );
        
        
    }
    
    
    return area;
    
}
    
    
    
    
    int maximalRectangle(vector<vector<char>>& matrix) {
        
        int m=matrix.size();
        if(m==0)
            return 0;
        int n=matrix[0].size();
        int area=0;
          vector<int> histogram(n,0);
        for(int i=0;i<m;i++)
        {
            for(int j=0;j<n;j++)
            {
               if(matrix[i][j]=='1')
                histogram[j]=histogram[j]+1;
                else
                    histogram[j]=0;                
                
            }
            
          area= max(area,findarea(histogram));
            
        }
        
        
      return area;  
    }
};
