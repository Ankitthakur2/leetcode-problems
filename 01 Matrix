Given an m x n binary matrix mat, return the distance of the nearest 0 for each cell.

The distance between two adjacent cells is 1.

 

Example 1:


Input: mat = [[0,0,0],[0,1,0],[0,0,0]]
Output: [[0,0,0],[0,1,0],[0,0,0]]
Example 2:


Input: mat = [[0,0,0],[0,1,0],[1,1,1]]
Output: [[0,0,0],[0,1,0],[1,2,1]]
 

Constraints:

m == mat.length
n == mat[i].length
1 <= m, n <= 10^4
1 <= m * n <= 10^4
mat[i][j] is either 0 or 1.
There is at least one 0 in mat.


class Solution {
public:
    vector<vector<int>> updateMatrix(vector<vector<int>>& matrix) {
        int m=matrix.size();
       
        if(m==0)
            return {};
        
        
        int n=matrix[0].size();
        
         vector<vector<int>> vec(m,vector<int>(n,-1));
        
        queue<pair<int,int>> q;
        for(int i=0;i<m;i++)
        {
            
            for(int j=0;j<n;j++)
            {
                if(matrix[i][j]==0)
                {
                    vec[i][j]=0;
                    q.push({i,j});
                }
                    
            }
        }
        
        
        while(!q.empty())
        {
            
            pair<int,int> p=q.front();
            q.pop();
            
            int x=p.first;
            int y=p.second;
            
                
                    if(x>=0 && x<m && y-1>=0 && y-1<n && matrix[x][y-1]==1 && vec[x][y-1]==-1)
                    {
                        vec[x][y-1]=vec[x][y]+1;
                    q.push({x,y-1});
                    }
                    
                     if(x>=0 && x<m && y+1>=0 && y+1<n && matrix[x][y+1]==1 && vec[x][y+1]==-1)
                    {
                           vec[x][y+1]=vec[x][y]+1;
                    q.push({x,y+1});
                    }
                    
                     if(x-1>=0 && x-1<m && y>=0 && y<n && matrix[x-1][y]==1 &&  vec[x-1][y]==-1)
                    {
                           vec[x-1][y]=vec[x][y]+1;
                    q.push({x-1,y});
                    }
                    
                     if(x+1>=0 && x+1<m && y>=0 && y<n && matrix[x+1][y]==1 &&  vec[x+1][y]==-1 )
                    {
                           vec[x+1][y]=vec[x][y]+1;
                    q.push({x+1,y});
                    }
            
            
            
            
        }
        
        
        return vec;
        
    }
};
