Given two strings s and t, return true if t is an anagram of s, and false otherwise.

 

Example 1:

Input: s = "anagram", t = "nagaram"
Output: true
Example 2:

Input: s = "rat", t = "car"
Output: false
 

Constraints:

1 <= s.length, t.length <= 5 * 10^4
s and t consist of lowercase English letters.
 

Follow up: What if the inputs contain Unicode characters? How would you adapt your solution to such a case?

class Solution {
public:
    bool isAnagram(string s, string t) {
        if(s.length()!=t.length())
            return false;
        unordered_map<char,int> m;
        int n=s.length();
        int i=0;
        while(i<n)
        {
            m[s[i]]++;
            m[t[i]]--;
            i++;
        }
        
        for(auto i=m.begin();i!=m.end();i++)
        {
            if((i->second)!=0)
                return false;
        }
      return true;  
    }
};
