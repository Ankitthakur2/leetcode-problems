You are given a string s of even length. Split this string into two halves of equal lengths, and let a be the first half and b be the second half.

Two strings are alike if they have the same number of vowels ('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'). Notice that s contains uppercase and lowercase letters.

Return true if a and b are alike. Otherwise, return false.

 

Example 1:

Input: s = "book"
Output: true
Explanation: a = "bo" and b = "ok". a has 1 vowel and b has 1 vowel. Therefore, they are alike.
Example 2:

Input: s = "textbook"
Output: false
Explanation: a = "text" and b = "book". a has 1 vowel whereas b has 2. Therefore, they are not alike.
Notice that the vowel o is counted twice.
Example 3:

Input: s = "MerryChristmas"
Output: false
Example 4:

Input: s = "AbCdEfGh"
Output: true
 

Constraints:

2 <= s.length <= 1000
s.length is even.
s consists of uppercase and lowercase letters.


class Solution {
public:
    bool halvesAreAlike(string s) {
     
        for(int i=0;i<s.length();i++)
            s[i]=tolower(s[i]);
        string str="aeiou";
        int count1=0,count2=0;
        
        
        for(int i=0;i<s.length()/2;i++)
        {
         if(s[i]=='a' || s[i]=='e' || s[i]=='i' || s[i]=='o'|| s[i]=='u')
            count1++;
        }
        
        for(int j=s.length()/2;j<s.length();j++)
        {
            if(s[j]=='a' || s[j]=='e' || s[j]=='i' || s[j]=='o'|| s[j]=='u')
            count2++;
        }
        
   
        if(count1==count2)   
        return true;
        else
            return false;
        
        
    }
};
