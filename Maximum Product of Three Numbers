Given an integer array nums, find three numbers whose product is maximum and return the maximum product.

 

Example 1:

Input: nums = [1,2,3]
Output: 6
Example 2:

Input: nums = [1,2,3,4]
Output: 24
Example 3:

Input: nums = [-1,-2,-3]
Output: -6
 

Constraints:

3 <= nums.length <= 10^4
-1000 <= nums[i] <= 1000

class Solution {
public:
    int maximumProduct(vector<int>& nums) {
        
        vector<int> A=nums;
        
        int n=A.size();
   int product;
   sort(A.begin(),A.end());
   
   if(n<3)
    return -1;
    if(n==3)
    return A[0]*A[1]*A[2];
    
   int p1= A[n-1]*A[n-2]*A[n-3];
   
   int p2=A[0]*A[1]*A[2];
   int p3=A[0]*A[1]*A[n-1];
   product =p1;
  product=max(p1,p2);
  
  return max(product,p3);
  
  
        
        
        
    }
};
