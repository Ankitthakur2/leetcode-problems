Given two non-negative integers, num1 and num2 represented as string, return the sum of num1 and num2 as a string.

You must solve the problem without using any built-in library for handling large integers (such as BigInteger). You must also not convert the inputs to integers directly.

 

Example 1:

Input: num1 = "11", num2 = "123"
Output: "134"
Example 2:

Input: num1 = "456", num2 = "77"
Output: "533"
Example 3:

Input: num1 = "0", num2 = "0"
Output: "0"
 

Constraints:

1 <= num1.length, num2.length <= 10^4
num1 and num2 consist of only digits.
num1 and num2 don't have any leading zeros except for the zero itself.


class Solution {
public:
    string addStrings(string num1, string num2) {
        
        string ans="";
        
        int n1=num1.size();
        int n2=num2.size();
        
        int carry=0;
        
        int i=n1-1;
        int j=n2-1;
        while(i>=0 && j>=0)
        {
            
          int ele=num1[i]-'0'+num2[j]-'0'+carry;
            carry=ele/10;
            ele=(ele%10);
           ans=ans+ to_string(ele);
            j--;
            i--;
        }
        
        while(i>=0)
        { 
            if(carry>0)
        {
          ans=ans+ to_string((num1[i]-'0'+carry)%10);
            carry=(num1[i]-'0'+carry)/10;
        }
            else
            {
                ans=ans+num1[i]; 
            }
            i--;
        }
        
        while(j>=0)
        {
            if(carry>0)
            {
              ans=ans+ to_string((num2[j]-'0'+carry)%10);
                carry=(num2[j]-'0'+carry)/10;
            }
            else
            {
               ans=ans+num2[j]; 
            }
            j--;
        }
        
        if(carry>0)
        {
            ans=ans+to_string(carry);
            carry=0;
        }
        reverse(ans.begin(),ans.end());
       return ans; 
        
    }
};

