Given an array A of strings made only from lowercase letters, return a list of all characters that show up in all strings within the list (including duplicates).  For example, if a character occurs 3 times in all strings but not 4 times, you need to include that character three times in the final answer.

You may return the answer in any order.

 

Example 1:

Input: ["bella","label","roller"]
Output: ["e","l","l"]
Example 2:

Input: ["cool","lock","cook"]
Output: ["c","o"]
 

Note:

1 <= A.length <= 100
1 <= A[i].length <= 100
A[i][j] is a lowercase letter

class Solution {
public:
    vector<string> commonChars(vector<string>& A) {
        string s2=A[0];
      int count1[26]={0};
       
        vector<string> v;
        for(int i=0;i<A[0].length();i++)
        {
            count1[s2[i]-'a']++;
        }
        
        for(int i=1;i<A.size();i++)
        {
            string s=A[i];
             int count2[26]={0};
            for(int j=0;j<A[i].length();j++)
            {
                count2[s[j]-'a']++;
            }
            
             
        for(int j=0;j<26;j++)
        {
            count1[j]=min(count1[j],count2[j]);
        }
            
        }
       
      for(int i=0;i<26;i++)
      {
          for(int j=0;j<count1[i];j++)
          {
              char res='a'+i;
              string st(1, res);
              v.push_back(st);
          }
      }
        
        return v;
    }
};
